<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="/css/admin_panel.css">
    <title>Document</title>
</head>
<body>


    <h2>All Products</h2>

    <!-- Search Bar -->
    <div class="search-container">
        <input type="text" id="searchInput" placeholder="Search clients..." onkeyup="searchTable()">
        <button class="search-button" onclick="searchTable()">Search</button>
    </div>








    <!-- Sort Dropdown -->
    <div class="sort-container">
        <label for="sortSelect">Sort By:</label>
        <select id="sortSelect" onchange="sortTable()">
            <option value="0">Product Id</option>
            <option value="1"> Name</option>
            <option value="2">Category</option>
            <option value="3">Price</option>
            <option value="4">Manufacturer</option>
            <option value="5">howMushInStock</option>
            <option value="6">Availability</option>
        </select>
        <label for="sortOrder">Order:</label>
        <select id="sortOrder" onchange="sortTable()">
            <option value="asc">Ascending</option>
            <option value="desc">Descending</option>
        </select>
    </div>







    <!-- Add Button -->
    <button class="add-button" onclick="openAddModal()">Add Product</button>
    
    <div class="table-wrapper">
        <table class="fl-table">
            <thead>
                <tr>         <!-- your Data -->
                    <th>Product ID</th>
                    <th>Name</th>
                    <th>Price</th>
                    <th>how Mush In Stock</th>
                    <th>Availability</th>
                    <th>Category</th>
                    <th>Manufacturer</th>
                    <th>Description</th>
                    <th>image</th>
                    <th>Actions</th>
                </tr>
            </thead>





            <tbody id="clientTableBody">                    <!-- show your Data -->
                <% products.forEach((product, index) => { %>
                    <tr data-id="<%= product.ProductId %>">
                        <td><%= product.ProductId %></td>
                        <td><%= product.Name %></td>
                        <td><%= product.Price %></td>
                        <td><%= product.howMushInStock %></td>
                        <td><%= product.Availability %></td>
                        <td><%= product.Category %></td>
                        <td><%= product.Manufacturer %></td>
                        <td><%= product.Description %></td>
                        <td><img  width="80" src="<%= product.image %>" alt="Product Image"></td>
                        <td>
                            <button class="edit-button" onclick="openEditModal('<%= product.ProductId %>')">
                                <i class="fa fa-pencil"></i>
                            </button>
                            <button class="delete-button" onclick="openDeleteModal('<%= product.ProductId %>', '<%= product.Name %>')">
                                <i class="fa fa-trash"></i>
                            </button>
                        </td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>











    <!-- Add/Edit/Delete Modal Structure -->
    <div id="clientModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeModal()">&times;</span>
            <h3 id="modalTitle">Add/Edit Product</h3>
            <form id="productForm" action="/editProduct" method="post" enctype="multipart/form-data">
                <input type="hidden" id="productId" name="ProductId">
                
                <label for="fullName">Full Name:</label>
                <input type="text" id="Name" name="Name" required><br>
                
                <label for="email">Price:</label>
                <input type="number" id="price" name="Price" required><br>
                
                <label for="phoneNumber">how Mush In Stock</label>
                <input type="number" id="howMushInStock" name="howMushInStock" required><br>

                <label for ="availability"> Availability</label>
                <input type="text" id="availability" name="Availability" required><br>

                <label for="category">Category:</label>
                <select id="category" name="Category" required>
                    <option value="">-- Select Category --</option>
                    <option value="Fruits">drones</option>
                    <option value="Vegetables">accessories</option>
                    <option value="Vegetables">other</option>
                </select>
                

                <label for ="manufacturer"> Manufacturer</label>
                <input type="text" id="manufacturer" name="Manufacturer" required><br>

                <label for ="description">  Description</label>
                <input type="text" id="description" name="Description" required><br>
                
                <label for="image">Product Image:</label>
                <input type="file" id="image" name="image"  ><br>


                <button type="submit" id="saveButton">Save</button>
                <button type="button" onclick="closeModal()">Cancel</button>
            </form>
        </div>
    </div>

    <!-- Delete Confirmation Modal -->
    <div id="deleteModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeDeleteModal()">&times;</span>
            <h3>Confirm Deletion</h3>
            <p id="deleteConfirmationMessage"></p>
            <button type="button" onclick="confirmDelete()">Yes, Delete</button>
            <button type="button" onclick="closeDeleteModal()">Cancel</button>
        </div>
    </div>

    <script>
        function searchTable() {
    var input = document.getElementById('searchInput').value.toUpperCase();
    var table = document.getElementById('clientTableBody');
    var rows = table.getElementsByTagName('tr');

    for (var i = 0; i < rows.length; i++) {
        var cells = rows[i].getElementsByTagName('td');
        var found = false;
        for (var j = 0; j < cells.length && !found; j++) {
            var cellText = cells[j].textContent.toUpperCase();
            if (cellText.indexOf(input) > -1) {
                found = true;
            }
        }
        rows[i].style.display = found ? '' : 'none';
    }
}

function sortTable() {
    var table = document.querySelector('.fl-table');
    var tbody = table.querySelector('tbody');
    var rows = Array.from(tbody.querySelectorAll('tr'));

    var sortSelect = document.getElementById('sortSelect').value;
    var sortOrder = document.getElementById('sortOrder').value;

    rows.sort(function(rowA, rowB) {
        var cellA = rowA.querySelectorAll('td')[sortSelect].textContent.trim();
        var cellB = rowB.querySelectorAll('td')[sortSelect].textContent.trim();

        if (sortOrder === 'asc') {
            return (cellA < cellB) ? 1 : -1;
        } else {
            return (cellA > cellB) ? 1 : -1;
        }
    });

    rows.forEach(function(row) {
        tbody.appendChild(row);
    });
}
        let editingRowId = null;
        let deletingRowId = null;

        // Function to open the Add/Edit modal
        function openAddModal() {
            document.getElementById('modalTitle').innerText = 'Add New Product';
            document.getElementById('productForm').action = '/addproduct';
            document.getElementById('productForm').reset();
            document.getElementById('clientModal').style.display = 'block';
            document.getElementById('deleteButton').style.display = 'none';
        }

        function openEditModal(productId) {
    editingRowId = productId;
    if (isNaN(productId)) {
        alert('Invalid productId');
        return;
    }
    document.getElementById('modalTitle').innerText = 'Edit Product';
    document.getElementById('productForm').action = '/editProduct';
    
    // Debugging: Log the productId to ensure it's correct
    console.log('Editing ProductId:', productId);

    const row = document.querySelector(`tr[data-id="${productId}"]`);
    if (!row) {
        console.error('Row not found for productId:', productId);
        return;
    }

    const cells = row.getElementsByTagName('td');
    if (!cells || cells.length === 0) {
        console.error('Cells not found for productId:', productId);
        return;
    }

    document.getElementById('productId').value = productId;
    document.getElementById('Name').value = cells[1].innerText;
    document.getElementById('price').value = cells[2].innerText;
    document.getElementById('howMushInStock').value = cells[3].innerText;
    document.getElementById('availability').value = cells[4].innerText;
    document.getElementById('category').value = cells[5].innerText;
    document.getElementById('manufacturer').value = cells[6].innerText;
    document.getElementById('description').value = cells[7].innerText;

    document.getElementById('clientModal').style.display = 'block';
}


        // Function to open the Delete modal
        function openDeleteModal(productId, productName) {
            deletingRowId = productId;
            document.getElementById('deleteConfirmationMessage').innerText = `Are you sure you want to delete this product with name: ${productName} and ID: ${productId}?`;
            document.getElementById('deleteModal').style.display = 'block';
        }

        // Function to confirm deletion
        function confirmDelete() {
            fetch('/deleteProduct', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                },
                body: new URLSearchParams({ productId: deletingRowId }) // Ensure field name matches
            })
            .then(response => {
                if (response.ok) {
                    location.reload(); // Reload the page after deletion
                } else {
                    alert('Error deleting product');
                }
            });
        }

        // Function to close the modals
        function closeModal() {
            document.getElementById('clientModal').style.display = 'none';
        }

        function closeDeleteModal() {
            document.getElementById('deleteModal').style.display = 'none';
        }

        // Close the modal if the user clicks outside of it
        window.onclick = function(event) {
            if (event.target == document.getElementById('clientModal')) {
                closeModal();
            } else if (event.target == document.getElementById('deleteModal')) {
                closeDeleteModal();
            }
        }
    </script>
</body>
</html>